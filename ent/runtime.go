// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/Pacerino/pr0music/ent/comments"
	"github.com/Pacerino/pr0music/ent/items"
	"github.com/Pacerino/pr0music/ent/schema"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	commentsFields := schema.Comments{}.Fields()
	_ = commentsFields
	// commentsDescCreatedAt is the schema descriptor for created_at field.
	commentsDescCreatedAt := commentsFields[0].Descriptor()
	// comments.DefaultCreatedAt holds the default value on creation for the created_at field.
	comments.DefaultCreatedAt = commentsDescCreatedAt.Default.(func() time.Time)
	// commentsDescUpdatedAt is the schema descriptor for updated_at field.
	commentsDescUpdatedAt := commentsFields[1].Descriptor()
	// comments.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	comments.DefaultUpdatedAt = commentsDescUpdatedAt.Default.(func() time.Time)
	// comments.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	comments.UpdateDefaultUpdatedAt = commentsDescUpdatedAt.UpdateDefault.(func() time.Time)
	itemsFields := schema.Items{}.Fields()
	_ = itemsFields
	// itemsDescCreatedAt is the schema descriptor for created_at field.
	itemsDescCreatedAt := itemsFields[0].Descriptor()
	// items.DefaultCreatedAt holds the default value on creation for the created_at field.
	items.DefaultCreatedAt = itemsDescCreatedAt.Default.(func() time.Time)
	// itemsDescUpdatedAt is the schema descriptor for updated_at field.
	itemsDescUpdatedAt := itemsFields[1].Descriptor()
	// items.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	items.DefaultUpdatedAt = itemsDescUpdatedAt.Default.(func() time.Time)
	// items.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	items.UpdateDefaultUpdatedAt = itemsDescUpdatedAt.UpdateDefault.(func() time.Time)
}
