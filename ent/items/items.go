// Code generated by ent, DO NOT EDIT.

package items

import (
	"time"
)

const (
	// Label holds the string label denoting the items type in the database.
	Label = "items"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldItemID holds the string denoting the item_id field in the database.
	FieldItemID = "item_id"
	// FieldTitle holds the string denoting the title field in the database.
	FieldTitle = "title"
	// FieldAlbum holds the string denoting the album field in the database.
	FieldAlbum = "album"
	// FieldArtist holds the string denoting the artist field in the database.
	FieldArtist = "artist"
	// FieldURL holds the string denoting the url field in the database.
	FieldURL = "url"
	// FieldAcrID holds the string denoting the acr_id field in the database.
	FieldAcrID = "acr_id"
	// FieldSpotifyURL holds the string denoting the spotify_url field in the database.
	FieldSpotifyURL = "spotify_url"
	// FieldSpotifyID holds the string denoting the spotify_id field in the database.
	FieldSpotifyID = "spotify_id"
	// FieldYoutubeURL holds the string denoting the youtube_url field in the database.
	FieldYoutubeURL = "youtube_url"
	// FieldYoutubeID holds the string denoting the youtube_id field in the database.
	FieldYoutubeID = "youtube_id"
	// EdgeComments holds the string denoting the comments edge name in mutations.
	EdgeComments = "comments"
	// Table holds the table name of the items in the database.
	Table = "items"
	// CommentsTable is the table that holds the comments relation/edge.
	CommentsTable = "comments"
	// CommentsInverseTable is the table name for the Comments entity.
	// It exists in this package in order to avoid circular dependency with the "comments" package.
	CommentsInverseTable = "comments"
	// CommentsColumn is the table column denoting the comments relation/edge.
	CommentsColumn = "items_comments"
)

// Columns holds all SQL columns for items fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldItemID,
	FieldTitle,
	FieldAlbum,
	FieldArtist,
	FieldURL,
	FieldAcrID,
	FieldSpotifyURL,
	FieldSpotifyID,
	FieldYoutubeURL,
	FieldYoutubeID,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
)
