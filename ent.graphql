directive @goField(forceResolver: Boolean, name: String) on FIELD_DEFINITION | INPUT_FIELD_DEFINITION
directive @goModel(model: String, models: [String!]) on OBJECT | INPUT_OBJECT | SCALAR | ENUM | INTERFACE | UNION
type Comments implements Node {
  id: ID!
  createdAt: Time!
  updatedAt: Time!
  itemID: Int!
  commentID: Int
  up: Int
  down: Int
  content: String
  created: Time
  thumb: String
  items: Items
}
"""
CommentsWhereInput is used for filtering Comments objects.
Input was generated by ent.
"""
input CommentsWhereInput {
  not: CommentsWhereInput
  and: [CommentsWhereInput!]
  or: [CommentsWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """item_id field predicates"""
  itemID: Int
  itemIDNEQ: Int
  itemIDIn: [Int!]
  itemIDNotIn: [Int!]
  itemIDGT: Int
  itemIDGTE: Int
  itemIDLT: Int
  itemIDLTE: Int
  """comment_id field predicates"""
  commentID: Int
  commentIDNEQ: Int
  commentIDIn: [Int!]
  commentIDNotIn: [Int!]
  commentIDGT: Int
  commentIDGTE: Int
  commentIDLT: Int
  commentIDLTE: Int
  commentIDIsNil: Boolean
  commentIDNotNil: Boolean
  """up field predicates"""
  up: Int
  upNEQ: Int
  upIn: [Int!]
  upNotIn: [Int!]
  upGT: Int
  upGTE: Int
  upLT: Int
  upLTE: Int
  upIsNil: Boolean
  upNotNil: Boolean
  """down field predicates"""
  down: Int
  downNEQ: Int
  downIn: [Int!]
  downNotIn: [Int!]
  downGT: Int
  downGTE: Int
  downLT: Int
  downLTE: Int
  downIsNil: Boolean
  downNotNil: Boolean
  """content field predicates"""
  content: String
  contentNEQ: String
  contentIn: [String!]
  contentNotIn: [String!]
  contentGT: String
  contentGTE: String
  contentLT: String
  contentLTE: String
  contentContains: String
  contentHasPrefix: String
  contentHasSuffix: String
  contentIsNil: Boolean
  contentNotNil: Boolean
  contentEqualFold: String
  contentContainsFold: String
  """created field predicates"""
  created: Time
  createdNEQ: Time
  createdIn: [Time!]
  createdNotIn: [Time!]
  createdGT: Time
  createdGTE: Time
  createdLT: Time
  createdLTE: Time
  createdIsNil: Boolean
  createdNotNil: Boolean
  """thumb field predicates"""
  thumb: String
  thumbNEQ: String
  thumbIn: [String!]
  thumbNotIn: [String!]
  thumbGT: String
  thumbGTE: String
  thumbLT: String
  thumbLTE: String
  thumbContains: String
  thumbHasPrefix: String
  thumbHasSuffix: String
  thumbIsNil: Boolean
  thumbNotNil: Boolean
  thumbEqualFold: String
  thumbContainsFold: String
  """items edge predicates"""
  hasItems: Boolean
  hasItemsWith: [ItemsWhereInput!]
}
"""
Define a Relay Cursor type:
https://relay.dev/graphql/connections.htm#sec-Cursor
"""
scalar Cursor
type Items implements Node {
  id: ID!
  createdAt: Time!
  updatedAt: Time!
  itemID: Int!
  title: String
  album: String
  artist: String
  url: String
  acrID: String
  spotifyURL: String
  spotifyID: String
  youtubeURL: String
  youtubeID: String
  comments: [Comments!]
}
"""
ItemsWhereInput is used for filtering Items objects.
Input was generated by ent.
"""
input ItemsWhereInput {
  not: ItemsWhereInput
  and: [ItemsWhereInput!]
  or: [ItemsWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """item_id field predicates"""
  itemID: Int
  itemIDNEQ: Int
  itemIDIn: [Int!]
  itemIDNotIn: [Int!]
  itemIDGT: Int
  itemIDGTE: Int
  itemIDLT: Int
  itemIDLTE: Int
  """title field predicates"""
  title: String
  titleNEQ: String
  titleIn: [String!]
  titleNotIn: [String!]
  titleGT: String
  titleGTE: String
  titleLT: String
  titleLTE: String
  titleContains: String
  titleHasPrefix: String
  titleHasSuffix: String
  titleIsNil: Boolean
  titleNotNil: Boolean
  titleEqualFold: String
  titleContainsFold: String
  """album field predicates"""
  album: String
  albumNEQ: String
  albumIn: [String!]
  albumNotIn: [String!]
  albumGT: String
  albumGTE: String
  albumLT: String
  albumLTE: String
  albumContains: String
  albumHasPrefix: String
  albumHasSuffix: String
  albumIsNil: Boolean
  albumNotNil: Boolean
  albumEqualFold: String
  albumContainsFold: String
  """artist field predicates"""
  artist: String
  artistNEQ: String
  artistIn: [String!]
  artistNotIn: [String!]
  artistGT: String
  artistGTE: String
  artistLT: String
  artistLTE: String
  artistContains: String
  artistHasPrefix: String
  artistHasSuffix: String
  artistIsNil: Boolean
  artistNotNil: Boolean
  artistEqualFold: String
  artistContainsFold: String
  """url field predicates"""
  url: String
  urlNEQ: String
  urlIn: [String!]
  urlNotIn: [String!]
  urlGT: String
  urlGTE: String
  urlLT: String
  urlLTE: String
  urlContains: String
  urlHasPrefix: String
  urlHasSuffix: String
  urlIsNil: Boolean
  urlNotNil: Boolean
  urlEqualFold: String
  urlContainsFold: String
  """acr_id field predicates"""
  acrID: String
  acrIDNEQ: String
  acrIDIn: [String!]
  acrIDNotIn: [String!]
  acrIDGT: String
  acrIDGTE: String
  acrIDLT: String
  acrIDLTE: String
  acrIDContains: String
  acrIDHasPrefix: String
  acrIDHasSuffix: String
  acrIDIsNil: Boolean
  acrIDNotNil: Boolean
  acrIDEqualFold: String
  acrIDContainsFold: String
  """spotify_url field predicates"""
  spotifyURL: String
  spotifyURLNEQ: String
  spotifyURLIn: [String!]
  spotifyURLNotIn: [String!]
  spotifyURLGT: String
  spotifyURLGTE: String
  spotifyURLLT: String
  spotifyURLLTE: String
  spotifyURLContains: String
  spotifyURLHasPrefix: String
  spotifyURLHasSuffix: String
  spotifyURLIsNil: Boolean
  spotifyURLNotNil: Boolean
  spotifyURLEqualFold: String
  spotifyURLContainsFold: String
  """spotify_id field predicates"""
  spotifyID: String
  spotifyIDNEQ: String
  spotifyIDIn: [String!]
  spotifyIDNotIn: [String!]
  spotifyIDGT: String
  spotifyIDGTE: String
  spotifyIDLT: String
  spotifyIDLTE: String
  spotifyIDContains: String
  spotifyIDHasPrefix: String
  spotifyIDHasSuffix: String
  spotifyIDIsNil: Boolean
  spotifyIDNotNil: Boolean
  spotifyIDEqualFold: String
  spotifyIDContainsFold: String
  """youtube_url field predicates"""
  youtubeURL: String
  youtubeURLNEQ: String
  youtubeURLIn: [String!]
  youtubeURLNotIn: [String!]
  youtubeURLGT: String
  youtubeURLGTE: String
  youtubeURLLT: String
  youtubeURLLTE: String
  youtubeURLContains: String
  youtubeURLHasPrefix: String
  youtubeURLHasSuffix: String
  youtubeURLIsNil: Boolean
  youtubeURLNotNil: Boolean
  youtubeURLEqualFold: String
  youtubeURLContainsFold: String
  """youtube_id field predicates"""
  youtubeID: String
  youtubeIDNEQ: String
  youtubeIDIn: [String!]
  youtubeIDNotIn: [String!]
  youtubeIDGT: String
  youtubeIDGTE: String
  youtubeIDLT: String
  youtubeIDLTE: String
  youtubeIDContains: String
  youtubeIDHasPrefix: String
  youtubeIDHasSuffix: String
  youtubeIDIsNil: Boolean
  youtubeIDNotNil: Boolean
  youtubeIDEqualFold: String
  youtubeIDContainsFold: String
  """comments edge predicates"""
  hasComments: Boolean
  hasCommentsWith: [CommentsWhereInput!]
}
"""
An object with an ID.
Follows the [Relay Global Object Identification Specification](https://relay.dev/graphql/objectidentification.htm)
"""
interface Node @goModel(model: "github.com/Pacerino/pr0music/ent.Noder") {
  """The id of the object."""
  id: ID!
}
"""Possible directions in which to order a list of items when provided an `orderBy` argument."""
enum OrderDirection {
  """Specifies an ascending order for a given `orderBy` argument."""
  ASC
  """Specifies a descending order for a given `orderBy` argument."""
  DESC
}
"""
Information about pagination in a connection.
https://relay.dev/graphql/connections.htm#sec-undefined.PageInfo
"""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!
  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!
  """When paginating backwards, the cursor to continue."""
  startCursor: Cursor
  """When paginating forwards, the cursor to continue."""
  endCursor: Cursor
}
type Query {
  """Fetches an object given its ID."""
  node(
    """ID of the object."""
    id: ID!
  ): Node
  """Lookup nodes by a list of IDs."""
  nodes(
    """The list of node IDs."""
    ids: [ID!]!
  ): [Node]!
}
"""The builtin Time type"""
scalar Time
